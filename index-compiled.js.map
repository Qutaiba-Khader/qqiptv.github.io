{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * Created by solvek on 08.02.16.\n */\n\n\"use strict\";\n\nvar fs = require('fs');\n\nvar http = require(\"http\");\nvar urlParse = require(\"url\").parse;\n\nvar m3u = require('m3ujs');\n\nclass Pled{\n    /**\n     * @param {Object|string[]} options Pled options object or array of sources\n     * @param {string[]} options.sources Sources of m3u files. Each source is either a path\n     * to local file of a url to an http file (starting from \"http://\" or \"https://\")\n     * @param {FilterFunction[]} [options.filters] Sequence of filters\n     * @param {string} [options.cachePath] Path to cache file\n     * @param {int} [options.cacheTime=5*24*60*60*1000] Time for cache in milliseconds. By default 5 days\n     * to not use the cache but regenerate content (however resulting content still can be saved to the cache)\n     */\n    constructor(options){\n        if (Array.isArray(options)){\n            options = {sources: options};\n        }\n\n        if (!options.cacheTime){\n            options.cacheTime = 5*24*60*60*1000;\n        }\n\n        if (!options.filters){\n            options.filters = [];\n        }\n\n        this.options = options;\n    }\n\n    /**\n     * @name FilterFunction\n     * @function\n     * @param {Object} stream Stream object\n     * @param {string} [source] Source\n     * @param {Object[]} [collected] Already collected streams for result\n     * @return Either modified Stream Object of undefined. Undefined means that the stream should not be outputted in result.\n     */\n\n    /**\n     * It is possible to use Pled in pair with [Express.js]{@link http://expressjs.com/}. Handles HTTP request.\n     * Query string can have \"force=true\" (or request.query.force true) query parameter. This allows to force reload data (ignoring cache)\n     * See `samples` directory for an example.\n     */\n    handleRequest(request, response){\n        let loader = request.query.force ? executeNoCache : execute;\n\n        loader()\n            .then(content =>{\n                //response.status(200);\n                response.setHeader('Content-type', 'audio/x-mpegurl');\n                response.setHeader(\"Content-Disposition\", \"attachment;filename=playlist.m3u\");\n                response.charset = 'UTF-8';\n                response.write(content);\n                response.end();\n            })\n            .catch(error => {\n                response.status(500);\n                response.send(\"Failed to generate the playlist.m3u. Error: \"+error.message);\n            });\n    }\n\n    /**\n     * Processes play list sources and generates resulting playlist as string\n     * If up to date cache content is available then cache will be returned without reloading\n     * @returns {Promise<string>} Promise with a string value - content of m3u\n     */\n    execute(){\n        if (!this.options.cachePath){\n            return this.executeNoCache();\n        }\n\n        let obj = this;\n\n        return this.loadCache()\n            .then(cache => {\n                if (cache.status == Pled.CACHE_STATUS_OK){\n                    return cache.content;\n                }\n\n                return obj.executeNoCache();\n            });\n    }\n\n    /**\n     * Creates content from sources omitting cache\n     * @returns {Promise<string>} Promise with a string value - content of m3u\n     */\n    executeNoCache(){\n        let obj = this;\n        return this._handleSourceTail(0, {tracks: []})\n            .then(result => {\n                let content = m3u.format(result);\n                if (obj.options.cachePath){\n                    obj.saveCache(content);\n                }\n                return content;\n            });\n    }\n\n    /**\n     * @typedef CacheStatus\n     * @type Object\n     * @property {Symbol} status Cache status: CACHE_STATUS_OK, CACHE_STATUS_MISSING, CACHE_STATUS_OUTDATED\n     * @property {string} [content] Optional content. Specified only if cache status is CACHE_STATUS_OK\n     */\n\n    /**\n     * Loads playlist from cache file.\n     * @returns {Promise<CacheStatus>}\n     */\n    loadCache(){\n        let options = this.options;\n\n        if (!options.cachePath){\n            return Promise.reject(new Error(\"Path to cache file not specified\"));\n        }\n\n        return new Promise(function (resolve) {\n            fs.stat(options.cachePath, (err, stat) => {\n                if (err){\n                    resolve({status : Pled.CACHE_STATUS_MISSING});\n                    return;\n                }\n\n                let now = new Date();\n                let age = now - stat.mtime;\n\n                //console.log(`Cache time: ${options.cacheTime}, now: ${now}, file time: ${stat.mtime}, age: ${age}`);\n\n                if (age > options.cacheTime){\n                    resolve({status : Pled.CACHE_STATUS_OUTDATED});\n                    return;\n                }\n\n                resolve(Pled.loadLocal(options.cachePath)\n                    .then(content => {\n                        return {status: Pled.CACHE_STATUS_OK, content: content};\n                    }));\n            });\n        });\n    }\n\n    saveCache(content){\n        let obj = this;\n        return new Promise(\n            function(resolve, reject){\n                fs.writeFile(obj.options.cachePath, content, err => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            });\n    }\n\n    _handleSourceTail(sourceIdx, result){\n        if (sourceIdx >= this.options.sources.length){\n            return result;\n        }\n\n        let source = this.options.sources[sourceIdx];\n        let obj = this;\n\n        return this._handleSource(source, result)\n            .then(function(){\n                return obj._handleSourceTail(sourceIdx+1, result);\n            });\n    }\n\n    _handleSource(source, result){\n        let filters = this.options.filters;\n\n        return Pled.loadSource(source)\n         .then(content => {\n                let parsed = m3u.parse(content);\n                var filter;\n\n                parsed.tracks.forEach(track => {\n                    for(var idx in filters){\n                        filter = filters[idx];\n\n                        track = filter(track, source, result);\n\n                        if (!track) break;\n                    }\n\n                    if (track){\n                        result.tracks.push(track);\n                    }\n                });\n            });\n    }\n\n    static loadLocal(path){\n        return new Promise(\n            function(resolve, reject) {\n                fs.readFile(path, 'utf8', (err, data) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(data);\n                    }\n                });\n            });\n    }\n\n    static loadRemote(url){\n        return new Promise(\n            function(resolve, reject){\n                var req = http.get(urlParse(url), function (res) {\n                    if (res.statusCode !== 200) {\n                        reject(new Error(\"Http returned status: \"+req.statusCode));\n                        return;\n                    }\n\n                    var data = '';\n\n                    res.on('data', function (chunk) {\n                        data += chunk;\n                    });\n                    res.on('end', function () {\n                        resolve(data);\n                    });\n                });\n\n                req.on('error', function (e) {\n                    reject(e);\n                });\n                req.end();\n            }\n        );\n    }\n\n    static loadSource(url){\n        if (url.startsWith('http://')||url.startsWith('http://')){\n            return Pled.loadRemote(url);\n        }\n\n        return Pled.loadLocal(url);\n    }\n}\n\nPled.CACHE_STATUS_OK = Symbol();\nPled.CACHE_STATUS_MISSING = Symbol();\nPled.CACHE_STATUS_OUTDATED = Symbol();\n\nPled.filters = require('./filters');\n\nmodule.exports = Pled;"]}